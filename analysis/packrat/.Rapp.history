characters[44]
characters[121]
length(simplyStats)
help(readLines)
con <- url("http://simplystatistics.org","r")
simplyStats <- readlines(con, n=150)
simplyStats <- readLines(con, n=150)
close(con)
head(simplyStats)
length(simplyStats)
characters <- nchar(simplyStats)
head(characters)
characters[2]
characters[45]
characters[122]
con <- url("http://simplystatistics.tumblr.com","r")
simplyStats <- readLines(con, n=150)
close(con)
characters <- nchar(simplyStats)
characters[2]
characters[45]
characters[122]
data2 <- read.csv("populations.csv")
head(data2)
help(merge)
merged <- merge(data1, data2, by="SERIALNO")
dim(merged)
merged <- merge(data1, data2, by="SERIALNO", all=FALSE)
dim(merged)
head(merged)
dim(data1)
dim(data2)
dim(merged)
merged <- merge(data1, data2, by.x="SERIALNO", by.y="id", all=TRUE)
merged <- merge(data1, data2, by.x="SERIALNO", all=TRUE)
names(data1)
names(data2)
merged <- merge(data1, data2, by="SERIALNO")
dim(merged)
head(data1$RT)
head(data2$RT)
help(merge)
merged <- merge(data1, data2, by.x="SERIALNO", by.y="SERIALNO")
dim(merged)
merged <- merge(data1, data2)
dim(merged)
merged <- merge(data1, data2, by.x="SERIALNO", by.y="SERIALNO", all=TRUE)
dim(merged)
library(rgdal, dismo)
comment
help(sample)
options()
help(options)
data(iris)
head(iris)
help(subset)
irisSubset <- subset(iris, selct=c(1:4))
head(irisSubset)
irisSubset <- iris[1:4,]
head(irisSubset)
irisSubset <- iris[,1:4]
head(irisSubset)
distxy <- dist(irisSubset)
hClustering <- hclust(distxy)
plot(hClustering)
help(hclust)
plot(hClustering, hmin=3)
plclust(hClustering, hmin=3)
plot(hClustering)
help(hline)
??hline
help(lines)
abline(h=3)
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/quiz3question4.csv", "quiz3question4.csv")
download.file("http://spark-public.s3.amazonaws.com/dataanalysis/quiz3question4.csv", "quiz3question4.csv")
data1 <- read.csv("quiz3question4.csv")
head(data1)
plot(data1$x, data1$y)
help(plot)
kmeansObj <- kmeans(data1, centers=2)
names(kmeansObj)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
data(zip.train)
library(ElemStatLearn)
data(zip.train)
head(zip.train)
im = zip2image(zip.train,3)
image(im)
im = zip2image(zip.train,8)
image(im)
svd1 <- svd(scale(zip.train[8,]))
head(svd1)
svd1$d
svd1$d^2
head(zip.train[8,])
head(zip.train[18,])
svd2 <- svd(scale(zip.train[18,]))
svd2$d
svd2$d^2
svd2 <- svd(scale(order(zip.train[18,])))
svd2$d
im1 = zip2image(zip.train,8)
svd1 <- svd(scale(im1))
svd1$d
head(svd1)
im2 = zip2image(zip.train,18)
svd2 <- svd(scale(im2))
head(svd2)
svd2$d^2/sum(svd2$d^2)
svd1$d^2/sum(svd1$d^2)
plot(svd1$d^2/sum(svd1$d^2))
plot(svd2$d^2/sum(svd2$d^2))
plot(data1$x, data1$y)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
kmeansObj <- kmeans(data1, centers=1)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
head(data1)
help(kmeans)
data1 <- data1[,2:3]
head(data1)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
barplot(c(1175000, 1400000))
library(ElemStatLearn)#
data(SAheart)#
set.seed(8484)#
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)#
trainSA = SAheart[train,]#
testSA = SAheart[-train,]
help(glm)
head(train)
head(SAheart)
model1 <- glm(chd~age+alcohol+obesity+tobacco+typea+ldl, data=SAheart, family="binomial")
model2 <- glm(chd~age+alcohol+obesity+tobacco+typea+ldl, data=SAheart[train,], family="binomial")
summary(model2)
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass(trainSA$chd, model2$fitted)
missClass(testSA$chd, model2$fitted)
library(pgmm)#
data(olive)#
olive = olive[,-1]
data(olive)
data(Olive)
library(classify)
library(pgmm)#
data(olive)#
olive = olive[,-1]
data(olive)
help(install.packages)
help(plot)
help(par)
colors(1:5)
colors()
red <- c(-58, 45, -124, 8, 50, 32, 51, -108, -83)
mean(Red)
mean(red)
red <- c(-82, -58, 45, -124, 8, 50, 32, 51, -108, -83)
mean(red)
sd(red)
help(sd)
blue <- c(137, 2,176,-124)
mean(blue)
sd(blue)
mean(red,blue)
help(mean)
mean(c(red,blue))
sd(c(red,blue))
help(lubridate)
library(lubridate)
help(lubridate)
help(ggplot2)
library(ggplot2)
help(ggplot2)
qplot
help(rename_aes)
png(file = "myplot.png")#
qplot(mpg, wt, data = mtcars, geom="path")#
dev.off()
getwd()
sessionInfo()
help(png)
dev = jsCanvas("plot1_10.js")#
  plot(1:10, main = "Some text")#
  text(1, 5, "Hi there")#
  text(1:10, 1:10, 1:10)#
  abline(v = seq(.5, by = 1, length = 10), lty = 2, col = "green")#
  abline(h = seq(.5, by = 1, length = 10), lwd = 3, col = "blue")#
dev.off()
amelia = plot(c(1:14), c(1:4))
amelia = plot(c(1:4), c(1:4))
amelia
help(plot)
library(gigvis)
help(guess)
help(gigvis)
help(ggplot2)
library(ggplot2)
help(ggplot2)
help(gigvis-package)
?gigvis-package
help(ggplot2-package)
help("ggplot2-package")
help("gigvis-package")
help(guess)
getwd()
data1 <- read.csv("labike.csv")
head(data1)
plot(data1$bike_count_pm, data1$ped_count_pm)
randomized <- sample(data1$bike_count_pm, length(data1$bike_count_pm), replace=FALSE)
plot(randomized, data1$ped_count_pm)
randomized <- sample(data1$bike_count_pm, length(data1$bike_count_pm), replace=FALSE)
plot(randomized, data1$ped_count_pm)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(data1, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()
ggplot(data1, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()+geom_smooth()
ggplot(data1, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()+geom_smooth(method="lm")
data1$randomized <- sample(data1$bike_count_pm, length(data1$bike_count_pm), replace=FALSE)
ggplot(data1, aes(x=ped_count_pm, y=randomized))+geom_point()+geom_smooth(method="lm")
data1$randomized <- sample(data1$bike_count_pm, length(data1$bike_count_pm), replace=FALSE)
ggplot(data1, aes(x=ped_count_pm, y=randomized))+geom_point()+geom_smooth(method="lm")
data1$randomized <- sample(data1$bike_count_pm, length(data1$bike_count_pm), replace=FALSE)
ggplot(data1, aes(x=ped_count_pm, y=randomized))+geom_point()+geom_smooth(method="lm")
clear
clear()
labike <- read.csv("labike.csv")
library(ggplot2)
head(labike)
ggplot(labike, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()+stat_smooth(method="lm")
labike$randomized <- sample(labike$bike_count_pm, length(labike$bike_count_pm), replace=FALSE)
head(labike)
ggplot(labike, aes(x=ped_count_pm, y=randomized))+geom_point()+stat_smooth(method="lm")
labike$randomized <- sample(labike$bike_count_pm, length(labike$bike_count_pm), replace=FALSE)
ggplot(labike, aes(x=ped_count_pm, y=randomized))+geom_point()+stat_smooth(method="lm")
labike$randomized <- sample(labike$bike_count_pm, length(labike$bike_count_pm), replace=FALSE)
ggplot(labike, aes(x=ped_count_pm, y=randomized))+geom_point()+stat_smooth(method="lm")
ggplot(labike, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()+stat_smooth(method="lm")
library(ggplot)
library(ggplot2)
labike <- read.csv("labike.csv")
head(labike)
ggplot(labike, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()+geom_smooth(method="lm")
library(ggplot2)
labike <- read.csv("labike.csv")
head(labike)
ggplot(labike, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()+geom_smooth(method="lm")
labike$randomized <- sample(labike$bike_count_pm, length(labike$bike_count_pm), replace=FALSE)
head(labike)
ggplot(labike, aes(x=ped_count_pm, y=randomized))+geom_point()+geom_smooth(method="lm")
labike$randomized <- sample(labike$bike_count_pm, length(labike$bike_count_pm), replace=FALSE)
ggplot(labike, aes(x=ped_count_pm, y=randomized))+geom_point()+geom_smooth(method="lm")
ggplot(labike, aes(x=ped_count_pm, y=bike_count_pm))+geom_point()+geom_smooth(method="lm")
library(packrat)
getwd()
setwd("/Users/amelia/Dropbox/submissions/factoRs/analysis/")
source("packrat/init.R")
setwd("packrat")
list.files()
edit("init.R")
file.edit("init.R")
